{"version":3,"sources":["components/slot.js","pages/IO-Test.js","pages/main.js","App.js","serviceWorker.js","index.js"],"names":["Slot","state","color","_this","props","methods","turn","classColor","this","classes","concat","react_default","a","createElement","row","className","Component","Head","display","e","preventDefault","socket","setState","players","messageHandler","onSubmit","submitHandler","bind","onChange","change","name","placeholder","value","player","code","type","gameOn","current","onClick","newGame","io","Board","grid","Array","fill","map","Red","Yellow","currentPlayer","message","on","data","player1","player2","emit","Object","objectSpread","defineProperty","target","_this2","IO_Test","socketHandler","changeHandler","i","column","onMouseDown","checkBelow","slot","index","components_slot","_this3","_this4","currentTarget","attributes","children","newGrid","toConsumableArray","length","_this5","currentGrid","col","_this6","colStack","rowStack","runLoop","winCount","direction","push","_this7","_this8","parseInt","split","checkVertically","checkHorizontally","checkRightUp","checkRightDown","App","Switch","Route","path","render","main","prop","Boolean","window","location","hostname","match","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.62100fac.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Slot extends Component {\n  state = {\n    color: this.props.color,\n    methods: {\n      turn: this.props.turn\n    }\n  };\n\n  render() {\n    const classColor = this.props.color;\n    const classes = `board__slot ${classColor}`;\n    return <div row={this.props.row} className={classes} />;\n  }\n}\n\nexport default Slot;\n","import React, { Component } from 'react';\n\nclass Head extends Component {\n  state = {\n    display: true\n  };\n\n  submitHandler(e) {\n    e.preventDefault();\n    this.props.socket();\n    this.setState({\n      display: false\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"header\">\n        <h1 className=\"header__title\">CONNECT 4</h1>\n        <div className=\"display\">\n          <div className=\"display__player-info\">\n            <div className=\"display__player\">\n              Player 1<div className=\"display__player-color Red\" />\n            </div>\n            <h2 className=\"display__name\">{this.props.players['Red']}</h2>\n          </div>\n          <div className=\"display__center\">\n            <h1 className=\"display__message\">{this.messageHandler()}</h1>\n            {this.state.display ? (\n              <form onSubmit={this.submitHandler.bind(this)}>\n                <input\n                  onChange={this.props.change}\n                  name=\"name\"\n                  placeholder=\"enter name\"\n                  value={this.props.player.name}\n                  className=\"form__input\"\n                />\n                <input\n                  onChange={this.props.change}\n                  name=\"code\"\n                  placeholder=\"enter codename\"\n                  value={this.props.player.code}\n                  className=\"form__input\"\n                />\n                <button type=\"submit\" className=\"form__button\">\n                  submit\n                </button>\n              </form>\n            ) : (\n              <div className=\"display__filler\" />\n            )}\n          </div>\n\n          <div className=\"display__player-info\">\n            <div className=\"display__player\">\n              Player 2<div className=\"display__player-color Yellow\" />\n            </div>\n            <h2 className=\"display__name\">{this.props.players['Yellow']}</h2>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  messageHandler() {\n    if (!this.props.players['Red'] || !this.props.players['Yellow']) {\n      return 'Waiting for players...';\n    } else if (\n      this.props.players['Red'] === this.props.player.name &&\n      !this.props.gameOn\n    ) {\n      return (\n        <button className=\"form__button\" onClick={this.props.newGame}>\n          New Game\n        </button>\n      );\n    } else if (\n      this.props.players['Red'] !== this.props.player.name &&\n      !this.props.gameOn\n    ) {\n      return `Waiting for ${this.props.players['Red']}`;\n    } else if (\n      this.props.player.name === this.props.players[this.props.current]\n    ) {\n      return \"It's Your Turn\";\n    } else if (\n      this.props.player.name !== this.props.players[this.props.current]\n    ) {\n      return `Waiting for ${this.props.players[this.props.current]}`;\n    }\n  }\n}\n\nexport default Head;\n","import React, { Component } from 'react';\nimport Slot from '../components/slot';\nimport Head from './IO-Test';\nimport io from 'socket.io-client';\nconst socket = io('https://clay-connect.herokuapp.com/');\n\nclass Board extends Component {\n  state = {\n    grid: Array(7)\n      .fill('white')\n      .map(row => Array(6).fill('white')),\n    players: { Red: '', Yellow: '' },\n    player: { name: '', code: '' },\n    currentPlayer: 'Red',\n    message: '',\n    gameOn: false\n  };\n\n  componentDidMount() {\n    socket.on('new', function(data) {\n      // console.log(data);\n    });\n\n    socket.on(\n      'board',\n      function(data) {\n        // console.log(data);\n        this.setState({\n          grid: data.grid,\n          currentPlayer: data.currentPlayer,\n          gameOn: data.gameOn,\n          message: data.message\n        });\n      }.bind(this)\n    );\n\n    socket.on(\n      'users',\n      function(data) {\n        // console.log(data);\n        if (data) {\n          this.setState({\n            players: {\n              Red: data.player1,\n              Yellow: data.player2 ? data.player2 : ''\n            }\n          });\n        }\n      }.bind(this)\n    );\n\n    socket.on(\n      'info',\n      function(data) {\n        if (data) {\n          // console.log(data);\n          this.setState({\n            currentPlayer: data.currentPlayer\n          });\n        }\n      }.bind(this)\n    );\n\n    socket.on(\n      'winning player',\n      function(data) {\n        // console.log(data);\n        this.setState({\n          message: data.message\n        });\n      }.bind(this)\n    );\n  }\n\n  socketHandler() {\n    socket.emit('user-info', this.state.player);\n  }\n\n  changeHandler(e) {\n    this.setState({\n      player: {\n        ...this.state.player,\n        [e.target.name]: e.target.value\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"game\">\n        <Head\n          players={this.state.players}\n          newGame={this.newGame.bind(this)}\n          current={this.state.currentPlayer}\n          socket={this.socketHandler.bind(this)}\n          gameOn={this.state.gameOn}\n          change={this.changeHandler.bind(this)}\n          player={this.state.player}\n        />\n        <div className=\"board\">\n          {this.state.grid.map((row, i) => {\n            return (\n              <div\n                column={i}\n                onMouseDown={this.checkBelow.bind(this)}\n                className=\"board__column\"\n              >\n                {row.map((slot, index) => {\n                  return (\n                    <Slot\n                      color={slot}\n                      column={i}\n                      row={index}\n                      current={this.state.currentPlayer}\n                    />\n                  );\n                })}\n              </div>\n            );\n          })}\n        </div>\n        <h1 className=\"game__message\">{this.state.message}</h1>\n      </div>\n    );\n  }\n\n  turnHandler() {\n    if (this.state.gameOn) {\n      if (this.state.currentPlayer === this.state.players[0].player) {\n        this.setState({\n          currentPlayer: this.state.players[1].player\n        });\n      } else if (this.state.currentPlayer === this.state.players[1].player) {\n        this.setState({\n          currentPlayer: this.state.players[0].player\n        });\n      }\n    }\n  }\n\n  newGame() {\n    this.setState(\n      {\n        currentPlayer: 'Red',\n        grid: Array(7)\n          .fill('white')\n          .map(row => Array(6).fill('white')),\n        message: '',\n        gameOn: true\n      },\n      () => {\n        socket.emit('state', this.state);\n      }\n    );\n  }\n\n  checkVertically(e) {\n    const { value } = e.currentTarget.attributes.column;\n    const { children } = e.currentTarget;\n    let column = value;\n    let newGrid = [...this.state.grid];\n    for (var i = children.length - 1; i >= 3; i--) {\n      if (\n        newGrid[column][i] === this.state.currentPlayer &&\n        newGrid[column][i - 1] === this.state.currentPlayer &&\n        newGrid[column][i - 2] === this.state.currentPlayer &&\n        newGrid[column][i - 3] === this.state.currentPlayer\n      ) {\n        this.setState(\n          {\n            message: `${this.state.players[this.state.currentPlayer]} wins!`,\n            currentPlayer: null,\n            gameOn: false\n          },\n          () => {\n            socket.emit('winner', this.state);\n          }\n        );\n      }\n    }\n  }\n\n  checkHorizontally(grid, row) {\n    let currentGrid = grid;\n    for (let i = 0; i < 4; i++) {\n      if (\n        currentGrid[i][row] === this.state.currentPlayer &&\n        currentGrid[i + 1][row] === this.state.currentPlayer &&\n        currentGrid[i + 2][row] === this.state.currentPlayer &&\n        currentGrid[i + 3][row] === this.state.currentPlayer\n      ) {\n        return this.setState(\n          {\n            message: `${this.state.players[this.state.currentPlayer]} wins!`,\n            currentPlayer: null,\n            gameOn: false\n          },\n          () => {\n            socket.emit('winner', this.state);\n          }\n        );\n      }\n    }\n  }\n\n  checkRightUp(grid, col, row) {\n    const { currentPlayer } = this.state;\n    let colStack = [];\n    let rowStack = [];\n    let runLoop = true;\n    let winCount = 0;\n    let direction = true;\n    while (runLoop) {\n      if (col <= -1 || row >= 6) {\n        runLoop = false;\n        // console.log('first');\n      } else if (col > 6 || (grid[col][row] !== currentPlayer && direction)) {\n        direction = false;\n        col = colStack[0];\n        row = rowStack[0];\n        col = col - 1;\n        row = row + 1;\n        // console.log('second');\n      } else if (grid[col][row] === currentPlayer && direction) {\n        winCount++;\n        rowStack.push(row);\n        colStack.push(col);\n        col++;\n        row--;\n        // console.log('third');\n      } else if (grid[col][row] === currentPlayer && !direction) {\n        winCount++;\n        col--;\n        row++;\n        // console.log('fourth');\n      } else {\n        runLoop = false;\n        // console.log('last');\n      }\n    }\n    // console.log(winCount);\n    if (winCount >= 4) {\n      return this.setState(\n        {\n          message: `${this.state.players[this.state.currentPlayer]} wins!`,\n          currentPlayer: null,\n          gameOn: false\n        },\n        () => {\n          socket.emit('winner', this.state);\n        }\n      );\n    }\n  }\n\n  checkRightDown(grid, col, row) {\n    const { currentPlayer } = this.state;\n    let colStack = [];\n    let rowStack = [];\n    let runLoop = true;\n    let winCount = 0;\n    let direction = true;\n    while (runLoop) {\n      if (col <= -1 || row <= -1) {\n        runLoop = false;\n        // console.log('first');\n      } else if (col > 6 || (grid[col][row] !== currentPlayer && direction)) {\n        direction = false;\n        col = colStack[0];\n        row = rowStack[0];\n        col = col - 1;\n        row = row - 1;\n        // console.log('second');\n      } else if (grid[col][row] === currentPlayer && direction) {\n        winCount++;\n        rowStack.push(row);\n        colStack.push(col);\n        col++;\n        row++;\n        // console.log('third');\n      } else if (grid[col][row] === currentPlayer && !direction) {\n        winCount++;\n        col--;\n        row--;\n        // console.log('fourth');\n      } else {\n        runLoop = false;\n        // console.log('last');\n      }\n    }\n    // console.log(winCount);\n    if (winCount >= 4) {\n      return this.setState(\n        {\n          message: `${this.state.players[this.state.currentPlayer]} wins!`,\n          currentPlayer: null,\n          gameOn: false\n        },\n        () => {\n          socket.emit('winner', this.state);\n        }\n      );\n    }\n  }\n\n  checkBelow(e) {\n    const { value } = e.currentTarget.attributes.column;\n    const { children } = e.currentTarget;\n    let column = parseInt(value);\n    let newGrid = [...this.state.grid];\n    if (\n      this.state.gameOn &&\n      this.state.player.name === this.state.players[this.state.currentPlayer]\n    ) {\n      for (var i = children.length - 1; i >= 0; i--) {\n        let color = children[i].className.split(' ')[1];\n        if (color === 'white') {\n          newGrid[column][i] = this.state.currentPlayer;\n          this.checkVertically(e);\n          this.checkHorizontally(newGrid, i);\n          this.checkRightUp(newGrid, column, i);\n          this.checkRightDown(newGrid, column, i);\n          return this.setState(\n            {\n              grid: newGrid,\n              currentPlayer:\n                this.state.currentPlayer === 'Red' ? 'Yellow' : 'Red'\n            },\n            () => {\n              socket.emit('state', this.state);\n            }\n          );\n        }\n      }\n    }\n  }\n}\n\nexport default Board;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Switch, Route } from 'react-router-dom';\nimport Board from './pages/main';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route\n            path=\"/\"\n            render={props => {\n              return <Board prop={props} />;\n            }}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../src/css/style.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}