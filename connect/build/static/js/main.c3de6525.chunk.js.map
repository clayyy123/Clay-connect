{"version":3,"sources":["components/slot.js","pages/IO-Test.js","pages/main.js","App.js","serviceWorker.js","index.js"],"names":["Slot","state","color","_this","props","methods","turn","this","setState","classColor","classes","concat","react_default","a","createElement","row","className","Component","Head","io","display","e","preventDefault","socket","players","messageHandler","onSubmit","submitHandler","bind","onChange","change","name","placeholder","value","player","code","type","gameOn","current","onClick","newGame","Board","grid","Array","fill","map","Cream","Black","currentPlayer","message","getEnvironmentUrl","on","data","console","log","player1","player2","emit","Object","objectSpread","defineProperty","target","_this2","IO_Test","socketHandler","changeHandler","i","column","onMouseDown","checkBelow","slot","index","components_slot","_this3","_this4","currentTarget","attributes","children","newGrid","toConsumableArray","length","_this5","currentGrid","col","_this6","colStack","rowStack","runLoop","winCount","direction","push","_this7","_this8","parseInt","split","checkVertically","checkHorizontally","checkRightUp","checkRightDown","App","Switch","Route","path","render","main","prop","Boolean","window","location","hostname","match","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c3de6525.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Slot extends Component {\n  state = {\n    color: this.props.color,\n    methods: {\n      turn: null\n    }\n  };\n\n  componentDidMount() {\n    this.setState({\n      methods: {\n        turn: this.props.turn\n      }\n    });\n  }\n\n  render() {\n    const classColor = this.props.color;\n    const classes = `board__slot ${classColor}`;\n    return <div row={this.props.row} className={classes} />;\n  }\n}\n\nexport default Slot;\n","import React, { Component } from 'react';\nimport io from 'socket.io-client';\nconst socket = io('http://localhost:3001');\n\nclass Head extends Component {\n  state = {\n    display: true\n  };\n\n  submitHandler(e) {\n    e.preventDefault();\n    this.props.socket();\n    this.setState({\n      display: false\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"header\">\n        <h1 className=\"header__title\">CONNECT 4</h1>\n        <div className=\"display\">\n          <div className=\"display__player-info\">\n            <div className=\"display__player\">\n              Player 1<div className=\"display__player-color Cream\" />\n            </div>\n            <h2 className=\"display__name\">{this.props.players['Cream']}</h2>\n          </div>\n          <div className=\"display__center\">\n            <h1 className=\"display__message\">{this.messageHandler()}</h1>\n            {this.state.display ? (\n              <form onSubmit={this.submitHandler.bind(this)}>\n                <input\n                  onChange={this.props.change}\n                  name=\"name\"\n                  placeholder=\"enter name\"\n                  value={this.props.player.name}\n                  className=\"form__input\"\n                />\n                <input\n                  onChange={this.props.change}\n                  name=\"code\"\n                  placeholder=\"enter codename\"\n                  value={this.props.player.code}\n                  className=\"form__input\"\n                />\n                <button type=\"submit\" className=\"form__button\">\n                  submit\n                </button>\n              </form>\n            ) : (\n              <div className=\"display__filler\" />\n            )}\n          </div>\n\n          <div className=\"display__player-info\">\n            <div className=\"display__player\">\n              Player 2<div className=\"display__player-color Black\" />\n            </div>\n\n            <h2 className=\"display__name\">{this.props.players['Black']}</h2>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  messageHandler() {\n    if (!this.props.players['Cream'] || !this.props.players['Black']) {\n      return 'Waiting for players...';\n    } else if (\n      this.props.players['Cream'] === this.props.player.name &&\n      !this.props.gameOn\n    ) {\n      return (\n        <button className=\"form__button\" onClick={this.props.newGame}>\n          New Game\n        </button>\n      );\n    } else if (\n      this.props.players['Cream'] !== this.props.player.name &&\n      !this.props.gameOn\n    ) {\n      return `Waiting for ${this.props.players['Cream']}`;\n    } else if (\n      this.props.player.name === this.props.players[this.props.current]\n    ) {\n      return \"It's Your Turn\";\n    } else if (\n      this.props.player.name !== this.props.players[this.props.current]\n    ) {\n      return `Waiting for ${this.props.players[this.props.current]}`;\n    }\n  }\n}\n\nexport default Head;\n","import React, { Component } from 'react';\nimport Slot from '../components/slot';\nimport Head from './IO-Test';\nimport io from 'socket.io-client';\n\nclass Board extends Component {\n  state = {\n    grid: Array(7)\n      .fill('white')\n      .map(row => Array(6).fill('white')),\n    players: { Cream: '', Black: '' },\n    player: { name: '', code: '' },\n    currentPlayer: 'Cream',\n    message: '',\n    gameOn: false\n  };\n\n  componentDidMount() {\n    const socket = io(this.getEnvironmentUrl());\n    socket.on('new', function(data) {\n      console.log(data);\n    });\n\n    socket.on(\n      'board',\n      function(data) {\n        console.log(data);\n        this.setState({\n          grid: data.grid,\n          currentPlayer: data.currentPlayer,\n          gameOn: data.gameOn,\n          message: data.message\n        });\n      }.bind(this)\n    );\n\n    socket.on(\n      'users',\n      function(data) {\n        console.log(data);\n        if (data) {\n          this.setState({\n            players: {\n              Cream: data.player1,\n              Black: data.player2 ? data.player2 : ''\n            }\n          });\n        }\n      }.bind(this)\n    );\n\n    socket.on(\n      'info',\n      function(data) {\n        if (data) {\n          console.log(data);\n          this.setState({\n            currentPlayer: data.currentPlayer\n          });\n        }\n      }.bind(this)\n    );\n\n    socket.on(\n      'winning player',\n      function(data) {\n        console.log(data);\n        this.setState({\n          message: data\n        });\n      }.bind(this)\n    );\n  }\n\n  socketHandler() {\n    const socket = io(this.getEnvironmentUrl());\n    socket.emit('user-info', this.state.player);\n  }\n\n  changeHandler(e) {\n    this.setState({\n      player: {\n        ...this.state.player,\n        [e.target.name]: e.target.value\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"game\">\n        <Head\n          players={this.state.players}\n          newGame={this.newGame.bind(this)}\n          current={this.state.currentPlayer}\n          socket={this.socketHandler.bind(this)}\n          gameOn={this.state.gameOn}\n          change={this.changeHandler.bind(this)}\n          player={this.state.player}\n        />\n        <div className=\"board\">\n          {this.state.grid.map((row, i) => {\n            return (\n              <div\n                column={i}\n                onMouseDown={this.checkBelow.bind(this)}\n                className=\"board__column\"\n              >\n                {row.map((slot, index) => {\n                  return (\n                    <Slot\n                      color={slot}\n                      column={i}\n                      row={index}\n                      current={this.state.currentPlayer}\n                    />\n                  );\n                })}\n              </div>\n            );\n          })}\n        </div>\n        <h1 className=\"game__message\">{this.state.message}</h1>\n      </div>\n    );\n  }\n\n  turnHandler() {\n    if (this.state.gameOn) {\n      if (this.state.currentPlayer === this.state.players[0].player) {\n        this.setState({\n          currentPlayer: this.state.players[1].player\n        });\n      } else if (this.state.currentPlayer === this.state.players[1].player) {\n        this.setState({\n          currentPlayer: this.state.players[0].player\n        });\n      }\n    }\n  }\n\n  newGame() {\n    this.setState(\n      {\n        currentPlayer: 'Cream',\n        grid: Array(7)\n          .fill('white')\n          .map(row => Array(6).fill('white')),\n        message: '',\n        gameOn: true\n      },\n      () => {\n        const socket = io(this.getEnvironmentUrl());\n        socket.emit('state', this.state);\n      }\n    );\n  }\n\n  checkVertically(e) {\n    const { value } = e.currentTarget.attributes.column;\n    const { children } = e.currentTarget;\n    let column = value;\n    let newGrid = [...this.state.grid];\n    for (var i = children.length - 1; i >= 3; i--) {\n      if (\n        newGrid[column][i] === this.state.currentPlayer &&\n        newGrid[column][i - 1] === this.state.currentPlayer &&\n        newGrid[column][i - 2] === this.state.currentPlayer &&\n        newGrid[column][i - 3] === this.state.currentPlayer\n      ) {\n        this.setState(\n          {\n            message: `${this.state.players[this.state.currentPlayer]} wins!`,\n            currentPlayer: null,\n            gameOn: false\n          },\n          () => {\n            const socket = io(this.getEnvironmentUrl());\n            socket.emit('winner', this.state.message);\n          }\n        );\n      }\n    }\n  }\n\n  checkHorizontally(grid, row) {\n    let currentGrid = grid;\n    for (let i = 0; i < 4; i++) {\n      if (\n        currentGrid[i][row] === this.state.currentPlayer &&\n        currentGrid[i + 1][row] === this.state.currentPlayer &&\n        currentGrid[i + 2][row] === this.state.currentPlayer &&\n        currentGrid[i + 3][row] === this.state.currentPlayer\n      ) {\n        return this.setState(\n          {\n            message: `${this.state.players[this.state.currentPlayer]} wins!`,\n            currentPlayer: null,\n            gameOn: false\n          },\n          () => {\n            const socket = io(this.getEnvironmentUrl());\n            socket.emit('winner', this.state.message);\n          }\n        );\n      }\n    }\n  }\n\n  checkRightUp(grid, col, row) {\n    const { currentPlayer } = this.state;\n    let colStack = [];\n    let rowStack = [];\n    let runLoop = true;\n    let winCount = 0;\n    let direction = true;\n    while (runLoop) {\n      if (col <= -1 || row >= 6) {\n        runLoop = false;\n        console.log('first');\n      } else if (col > 6 || (grid[col][row] !== currentPlayer && direction)) {\n        direction = false;\n        col = colStack[0];\n        row = rowStack[0];\n        col = col - 1;\n        row = row + 1;\n        console.log('second');\n      } else if (grid[col][row] === currentPlayer && direction) {\n        winCount++;\n        rowStack.push(row);\n        colStack.push(col);\n        col++;\n        row--;\n        console.log('third');\n      } else if (grid[col][row] === currentPlayer && !direction) {\n        winCount++;\n        col--;\n        row++;\n        console.log('fourth');\n      } else {\n        runLoop = false;\n        console.log('last');\n      }\n    }\n    console.log(winCount);\n    if (winCount >= 4) {\n      return this.setState(\n        {\n          message: `${this.state.players[this.state.currentPlayer]} wins!`,\n          currentPlayer: null,\n          gameOn: false\n        },\n        () => {\n          const socket = io(this.getEnvironmentUrl());\n          socket.emit('winner', this.state.message);\n        }\n      );\n    }\n  }\n\n  checkRightDown(grid, col, row) {\n    const { currentPlayer } = this.state;\n    let colStack = [];\n    let rowStack = [];\n    let runLoop = true;\n    let winCount = 0;\n    let direction = true;\n    while (runLoop) {\n      if (col <= -1 || row <= -1) {\n        runLoop = false;\n        console.log('first');\n      } else if (col > 6 || (grid[col][row] !== currentPlayer && direction)) {\n        direction = false;\n        col = colStack[0];\n        row = rowStack[0];\n        col = col - 1;\n        row = row - 1;\n        console.log('second');\n      } else if (grid[col][row] === currentPlayer && direction) {\n        winCount++;\n        rowStack.push(row);\n        colStack.push(col);\n        col++;\n        row++;\n        console.log('third');\n      } else if (grid[col][row] === currentPlayer && !direction) {\n        winCount++;\n        col--;\n        row--;\n        console.log('fourth');\n      } else {\n        runLoop = false;\n        console.log('last');\n      }\n    }\n    console.log(winCount);\n    if (winCount >= 4) {\n      return this.setState(\n        {\n          message: `${this.state.players[this.state.currentPlayer]} wins!`,\n          currentPlayer: null,\n          gameOn: false\n        },\n        () => {\n          const socket = io(this.getEnvironmentUrl());\n          socket.emit('winner', this.state.message);\n        }\n      );\n    }\n  }\n\n  checkBelow(e) {\n    const { value } = e.currentTarget.attributes.column;\n    const { children } = e.currentTarget;\n    let column = parseInt(value);\n    let newGrid = [...this.state.grid];\n    if (\n      this.state.gameOn &&\n      this.state.player.name === this.state.players[this.state.currentPlayer]\n    ) {\n      for (var i = children.length - 1; i >= 0; i--) {\n        let color = children[i].className.split(' ')[1];\n        if (color === 'white') {\n          newGrid[column][i] = this.state.currentPlayer;\n          this.checkVertically(e);\n          this.checkHorizontally(newGrid, i);\n          this.checkRightUp(newGrid, column, i);\n          this.checkRightDown(newGrid, column, i);\n          return this.setState(\n            {\n              grid: newGrid,\n              currentPlayer:\n                this.state.currentPlayer === 'Cream' ? 'Black' : 'Cream'\n            },\n            () => {\n              const socket = io(this.getEnvironmentUrl());\n              socket.emit('state', this.state);\n            }\n          );\n        }\n      }\n    }\n  }\n}\n\nexport default Board;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Switch, Route } from 'react-router-dom';\nimport Board from './pages/main';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route\n            path=\"/\"\n            render={props => {\n              return <Board prop={props} />;\n            }}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../src/css/style.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}